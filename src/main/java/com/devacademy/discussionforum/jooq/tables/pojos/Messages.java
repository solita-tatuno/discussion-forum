/*
 * This file is generated by jOOQ.
 */
package com.devacademy.discussionforum.jooq.tables.pojos;


import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class Messages implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer id;
    private Integer userId;
    private Integer topicId;
    private String message;
    private Integer upVotes;
    private OffsetDateTime createdAt;
    private OffsetDateTime updatedAt;

    public Messages() {}

    public Messages(Messages value) {
        this.id = value.id;
        this.userId = value.userId;
        this.topicId = value.topicId;
        this.message = value.message;
        this.upVotes = value.upVotes;
        this.createdAt = value.createdAt;
        this.updatedAt = value.updatedAt;
    }

    public Messages(
        Integer id,
        Integer userId,
        Integer topicId,
        String message,
        Integer upVotes,
        OffsetDateTime createdAt,
        OffsetDateTime updatedAt
    ) {
        this.id = id;
        this.userId = userId;
        this.topicId = topicId;
        this.message = message;
        this.upVotes = upVotes;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for <code>public.messages.id</code>.
     */
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.messages.id</code>.
     */
    public void setId(Integer id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.messages.user_id</code>.
     */
    public Integer getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>public.messages.user_id</code>.
     */
    public void setUserId(Integer userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>public.messages.topic_id</code>.
     */
    public Integer getTopicId() {
        return this.topicId;
    }

    /**
     * Setter for <code>public.messages.topic_id</code>.
     */
    public void setTopicId(Integer topicId) {
        this.topicId = topicId;
    }

    /**
     * Getter for <code>public.messages.message</code>.
     */
    public String getMessage() {
        return this.message;
    }

    /**
     * Setter for <code>public.messages.message</code>.
     */
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for <code>public.messages.up_votes</code>.
     */
    public Integer getUpVotes() {
        return this.upVotes;
    }

    /**
     * Setter for <code>public.messages.up_votes</code>.
     */
    public void setUpVotes(Integer upVotes) {
        this.upVotes = upVotes;
    }

    /**
     * Getter for <code>public.messages.created_at</code>.
     */
    public OffsetDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.messages.created_at</code>.
     */
    public void setCreatedAt(OffsetDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for <code>public.messages.updated_at</code>.
     */
    public OffsetDateTime getUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Setter for <code>public.messages.updated_at</code>.
     */
    public void setUpdatedAt(OffsetDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Messages other = (Messages) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.topicId == null) {
            if (other.topicId != null)
                return false;
        }
        else if (!this.topicId.equals(other.topicId))
            return false;
        if (this.message == null) {
            if (other.message != null)
                return false;
        }
        else if (!this.message.equals(other.message))
            return false;
        if (this.upVotes == null) {
            if (other.upVotes != null)
                return false;
        }
        else if (!this.upVotes.equals(other.upVotes))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.updatedAt == null) {
            if (other.updatedAt != null)
                return false;
        }
        else if (!this.updatedAt.equals(other.updatedAt))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.topicId == null) ? 0 : this.topicId.hashCode());
        result = prime * result + ((this.message == null) ? 0 : this.message.hashCode());
        result = prime * result + ((this.upVotes == null) ? 0 : this.upVotes.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.updatedAt == null) ? 0 : this.updatedAt.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Messages (");

        sb.append(id);
        sb.append(", ").append(userId);
        sb.append(", ").append(topicId);
        sb.append(", ").append(message);
        sb.append(", ").append(upVotes);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(updatedAt);

        sb.append(")");
        return sb.toString();
    }
}
