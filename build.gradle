plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.flywaydb.flyway' version '9.22.3'
    id 'org.jooq.jooq-codegen-gradle' version '3.19.3'
    id "co.uzzu.dotenv.gradle" version "4.0.0"
}

group = 'com.dev-academy'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.hibernate.validator:hibernate-validator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.springframework.session:spring-session-core'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.jooq:jooq:3.19.3'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.springframework.security:spring-security-test'
    runtimeOnly 'org.postgresql:postgresql'
    jooqCodegen 'org.postgresql:postgresql'
}

tasks.named('test') {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events = ["failed", "skipped", "passed"]
        exceptionFormat = "full"
    }
}

flyway {
    url = env.DATASOURCE.value
    user = env.FLYWAY_USER.value
    password = env.FLYWAY_USER_PASSWORD.value
}

jooq {
    configuration {
        // Configure the database connection here
        jdbc {
            url = env.DATASOURCE.value
            user = env.DB_USER.value
            password = env.DB_USER_PASSWORD.value
        }

        generator {
            database {
                name = 'org.jooq.meta.postgres.PostgresDatabase'
                excludes = 'flyway_.*'
                inputSchema = 'public'
                generate {
                    pojos = true
                }
                target {
                    packageName = 'com.devacademy.discussionforum.jooq'
                    directory = 'src/main/java'
                }
            }
        }
    }
}